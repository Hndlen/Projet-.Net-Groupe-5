// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projet.BDD;

#nullable disable

namespace Projet.BDD.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Projet.BDD.Entities.Console.Adresse", b =>
                {
                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CodePostal")
                        .HasColumnType("int");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Libelle");

                    b.ToTable("Adresses");

                    b.HasData(
                        new
                        {
                            Libelle = "12, rue des Oliviers",
                            CodePostal = 94000,
                            Complement = "",
                            Ville = "CRETEIL"
                        });
                });

            modelBuilder.Entity("Projet.BDD.Entities.Console.CarteBancaire", b =>
                {
                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompteBancaireNumero")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Numero");

                    b.HasIndex("CompteBancaireNumero");

                    b.ToTable("CartesBancaire");
                });

            modelBuilder.Entity("Projet.BDD.Entities.Console.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdresseClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AdresseClientId");

                    b.ToTable("Clients");

                    b.HasDiscriminator().HasValue("Client");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Projet.BDD.Entities.Console.CompteBancaire", b =>
                {
                    b.Property<string>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateOuverture")
                        .HasColumnType("datetime2");

                    b.Property<double>("Solde")
                        .HasColumnType("float");

                    b.Property<int>("TitulaireId")
                        .HasColumnType("int");

                    b.HasKey("Numero");

                    b.HasIndex("TitulaireId");

                    b.ToTable("ComptesBancaire");
                });

            modelBuilder.Entity("Projet.BDD.Entities.Serveur.Anomalie", b =>
                {
                    b.Property<string>("NumeroCarteBancaire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateOperation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Devise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Erreur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MontantOperation")
                        .HasColumnType("float");

                    b.Property<int?>("TypeOperation")
                        .HasColumnType("int");

                    b.HasKey("NumeroCarteBancaire");

                    b.ToTable("Anomalies");
                });

            modelBuilder.Entity("Projet.BDD.Entities.Serveur.Enregistrement", b =>
                {
                    b.Property<string>("NumeroCarteBancaire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateOperation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Devise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MontantOperation")
                        .HasColumnType("float");

                    b.Property<int>("TypeOperation")
                        .HasColumnType("int");

                    b.HasKey("NumeroCarteBancaire");

                    b.ToTable("Enregistrements");
                });

            modelBuilder.Entity("Projet.BDD.Entities.Console.ClientParticulier", b =>
                {
                    b.HasBaseType("Projet.BDD.Entities.Console.Client");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Sexe")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("ClientParticulier");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdresseClientId = "12, rue des Oliviers",
                            Mail = "bety@gmail.com",
                            Nom = "BETY",
                            DateNaissance = new DateTime(1985, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Prenom = "Daniel",
                            Sexe = 0
                        });
                });

            modelBuilder.Entity("Projet.BDD.Entities.Console.ClientProfessionnel", b =>
                {
                    b.HasBaseType("Projet.BDD.Entities.Console.Client");

                    b.Property<string>("AdresseSiegeLibelle")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Siret")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatutJuridique")
                        .HasColumnType("int");

                    b.HasIndex("AdresseSiegeLibelle");

                    b.HasDiscriminator().HasValue("ClientProfessionnel");
                });

            modelBuilder.Entity("Projet.BDD.Entities.Console.CarteBancaire", b =>
                {
                    b.HasOne("Projet.BDD.Entities.Console.CompteBancaire", null)
                        .WithMany("CartesBancaire")
                        .HasForeignKey("CompteBancaireNumero");
                });

            modelBuilder.Entity("Projet.BDD.Entities.Console.Client", b =>
                {
                    b.HasOne("Projet.BDD.Entities.Console.Adresse", "AdresseClient")
                        .WithMany()
                        .HasForeignKey("AdresseClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdresseClient");
                });

            modelBuilder.Entity("Projet.BDD.Entities.Console.CompteBancaire", b =>
                {
                    b.HasOne("Projet.BDD.Entities.Console.Client", "Titulaire")
                        .WithMany()
                        .HasForeignKey("TitulaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Titulaire");
                });

            modelBuilder.Entity("Projet.BDD.Entities.Console.ClientProfessionnel", b =>
                {
                    b.HasOne("Projet.BDD.Entities.Console.Adresse", "AdresseSiege")
                        .WithMany()
                        .HasForeignKey("AdresseSiegeLibelle");

                    b.Navigation("AdresseSiege");
                });

            modelBuilder.Entity("Projet.BDD.Entities.Console.CompteBancaire", b =>
                {
                    b.Navigation("CartesBancaire");
                });
#pragma warning restore 612, 618
        }
    }
}
